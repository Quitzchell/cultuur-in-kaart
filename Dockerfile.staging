# Stage 1: Base image for installing dependencies
FROM php:8.3-fpm-alpine3.19 AS base

# Set working directory
WORKDIR /var/www/html

# Install dependencies
RUN apk add --no-cache \
    curl \
    nodejs \
    npm \
    git \
    icu-dev \
    libintl \
    libzip-dev \
    sqlite-dev \
    supervisor

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Stage 2: Create image for application
FROM base AS build

# Install additional PHP extensions
RUN docker-php-ext-install intl zip pdo_sqlite bcmath

# Copy the rest of the application files
COPY . .

# Install application dependencies using Composer
RUN composer install --no-dev --optimize-autoloader

# Install additional Composer packages
RUN composer require fakerphp/faker

# Create the SQLite database directory
RUN mkdir -p /var/www/html/database

# Install Node.js dependencies and build assets
RUN npm install
RUN npm run build

# Stage 3: Create smaller image size for deployment
FROM php:8.3-fpm-alpine3.19

# Install necessary PHP extensions and other dependencies
RUN apk add --no-cache \
    icu-dev \
    libzip-dev \
    sqlite-dev \
    nginx \
    supervisor

# Install PHP extensions
RUN docker-php-ext-install intl zip pdo_sqlite bcmath

# Set working directory
WORKDIR /var/www/html

# Copy necessary files from the build stage
COPY --from=build /usr/local/bin/composer /usr/local/bin/composer
COPY --from=build --chown=www-data:www-data /var/www/html /var/www/html

# Copy Nginx and Supervisor configuration files
COPY deployment/staging/nginx.conf /etc/nginx/nginx.conf
COPY deployment/staging/supervisord.conf /etc/supervisord.conf

# Set environment variables for sqlite
ENV DB_CONNECTION=sqlite
ENV DB_DATABASE=/var/www/html/database/database.sqlite
ENV APP_ENV=staging

# Expose the port the application runs on
EXPOSE 80 443

# Copy the entrypoint script
COPY deployment/staging/entrypoint.sh /entrypoint.sh

# Ensure proper permissions for the working directory and database
RUN chown -R www-data:www-data /var/www/html

# Make the entrypoint script executable
RUN chmod +x /entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/entrypoint.sh"]

# Start Supervisor
CMD ["supervisord", "-c", "/etc/supervisord.conf"]
